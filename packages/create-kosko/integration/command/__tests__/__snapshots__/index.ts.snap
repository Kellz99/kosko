// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when target is an empty folder should write files to the target path 1`] = `
{
  "README.md": "This is a [Kosko] project bootstrapped with \`create-kosko\` command.

## Getting Started

Generate Kubernetes manifests with the following command.

\`\`\`sh
npm run generate
\`\`\`

The result will be printed in the console. You can pipe the output to \`kubectl\` to apply generated manifests on Kubernetes.

\`\`\`sh
npm run --silent generate | kubectl apply -f -
\`\`\`

When \`--env\` option is set, Kosko will read variables from environment files. Then you can fetch variables with \`@kosko/env\` package.

\`\`\`sh
npm run generate -- --env dev
\`\`\`

You can try editing files in \`components\` and \`environments\` folder and re-run \`npm run generate\` to see changes.

## Learn More

Check [Kosko docs](https://kosko.dev/docs/) for more information about Kosko.

[kosko]: https://kosko.dev/
",
  "components/nginx.js": "const { Deployment } = require("kubernetes-models/apps/v1/Deployment");
const { Service } = require("kubernetes-models/v1/Service");
const env = require("@kosko/env");

const params = env.component("nginx");

const name = "nginx";
const labels = { app: name };
const port = 80;

const deployment = new Deployment({
  metadata: {
    name,
    namespace: params.namespace
  },
  spec: {
    replicas: params.replicas,
    selector: {
      matchLabels: labels
    },
    template: {
      metadata: { labels },
      spec: {
        containers: [
          {
            name: "nginx",
            image: "nginx:stable",
            ports: [{ containerPort: port }],
            env: [{ name: "NGINX_PORT", value: \`\${port}\` }]
          }
        ]
      }
    }
  }
});

const service = new Service({
  metadata: {
    name,
    namespace: params.namespace
  },
  spec: {
    selector: labels,
    ports: [{ port }]
  }
});

module.exports = [deployment, service];
",
  "environments/dev/index.js": "module.exports = {
  namespace: "dev"
};
",
  "environments/dev/nginx.js": "module.exports = {
  replicas: 3
};
",
  "kosko.toml": "components = ["*"]
",
  "package.json": "{
  "scripts": {
    "generate": "kosko generate",
    "validate": "kosko validate"
  }
}
",
}
`;
